{"version":3,"sources":["webpack:///static/js/0.02d5ba37bcb26d4beb14.js","webpack:///./src/vuex/getters.js","webpack:///./src/vuex/actions.js","webpack:///index.vue","webpack:///userCard.vue","webpack:///./src/components/game/userCard.vue?6032","webpack:///./src/components/game/template.html","webpack:///./src/components/game/index.vue","webpack:///./src/components/game/userCard.vue"],"names":["webpackJsonp","48","module","exports","getGamePgn","state","boards","pgn","getGameTurn","turn","getGameTimesUsers","times","white","twhite","black","tblack","Object","defineProperty","value","83","makeAction","type","_ref","_len","arguments","length","args","Array","_key","dispatch","apply","undefined","concat","boardGameMove","boardGameTurn","boardGameCountDown","90","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_chessground","_chessground2","_chess","_chess2","_garbochess","_garbochess2","_userCard","_userCard2","_boardHistory","_boardHistory2","_bodyMen","_bodyMen2","_lstorage","_lstorage2","_user","_user2","_actions","_getters","_jquery","_jquery2","_vueMaterialComponents","_vueMaterialComponents2","timesColor","stylesBoard","board","pieces","template","route","canActivate","transition","user_acces","get","_id","redirect","data","chattext","mensjGame","user","getUser","ground","fen","orientation","history","styleboard","active","chess","styles","dirServer","mixins","props","components","UserCard","BoardHistory","BodyMen","vuex","actions","getters","time","events","move","this","changeStateGame","gameFinish","dataResult","stateFinishGame","mensaje","recibeMensaje","men","methods","idDiv","divScroll","document","getElementById","atBottom","scrollTop","scrollHeight","clientHeight","push","setTimeout","animate","loadUserConvert","parms","c","f","$socket","emit","log","bind","sendMensaje","thisUser","username","otherUser","u1","u2","body","public","send","recibe","countDown","seg","clearInterval","result","color","motiv","countDownStart","setInterval","chessToDests","dests","SQUARES","forEach","s","ms","moves","square","verbose","map","m","to","chessToColor","t","onMove","orig","dest","from","promotion","event","idBoard","PcIngeniesMove","sfrom","FormatSquare","sto","pcMove","InitializeFromFen","Search","isVsPc","isHumanVsPC","load_pgn","set","turnColor","movable","changeOrientation","changeStyle","styleAdapter","style","height","clientWidth","initGame","callbacks","del","$route","router","go","parmsLoad","range","limit","skip","gameState","in_checkmate","in_draw","_result","in_check","rendir","stop","created","ResetGame","viewOnly","animation","duration","free","premove","after","drawable","enabled","showDests","offset","top","watch","newVal","oldVal","91","name","String","pad","n","lenght","slice","filters","boardTime","min","parseInt","segs","200","209","216","__vue_script__","__vue_template__","options","217"],"mappings":"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","file":"static/js/0.02d5ba37bcb26d4beb14.js","sourcesContent":["webpackJsonp([0,2],{\n\n/***/ 48:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getGamePgn = getGamePgn;\n\texports.getGameTurn = getGameTurn;\n\texports.getGameTimesUsers = getGameTimesUsers;\n\tfunction getGamePgn(state) {\n\t  return state.boards.pgn;\n\t}\n\tfunction getGameTurn(state) {\n\t  return state.boards.turn;\n\t}\n\tfunction getGameTimesUsers(state) {\n\t  var times = {\n\t    white: state.boards.twhite,\n\t    black: state.boards.tblack\n\t  };\n\t  return times;\n\t}\n\n/***/ },\n\n/***/ 83:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar boardGameMove = exports.boardGameMove = makeAction('MOVE');\n\tvar boardGameTurn = exports.boardGameTurn = makeAction('TURN');\n\tvar boardGameCountDown = exports.boardGameCountDown = makeAction('COUNTDOWN');\n\tfunction makeAction(type) {\n\t  return function (_ref) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    var dispatch = _ref.dispatch;\n\t    return dispatch.apply(undefined, [type].concat(args));\n\t  };\n\t}\n\n/***/ },\n\n/***/ 90:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _chessground = __webpack_require__(20);\n\t\n\tvar _chessground2 = _interopRequireDefault(_chessground);\n\t\n\tvar _chess = __webpack_require__(18);\n\t\n\tvar _chess2 = _interopRequireDefault(_chess);\n\t\n\tvar _garbochess = __webpack_require__(41);\n\t\n\tvar _garbochess2 = _interopRequireDefault(_garbochess);\n\t\n\tvar _userCard = __webpack_require__(217);\n\t\n\tvar _userCard2 = _interopRequireDefault(_userCard);\n\t\n\tvar _boardHistory = __webpack_require__(76);\n\t\n\tvar _boardHistory2 = _interopRequireDefault(_boardHistory);\n\t\n\tvar _bodyMen = __webpack_require__(78);\n\t\n\tvar _bodyMen2 = _interopRequireDefault(_bodyMen);\n\t\n\tvar _lstorage = __webpack_require__(4);\n\t\n\tvar _lstorage2 = _interopRequireDefault(_lstorage);\n\t\n\tvar _user = __webpack_require__(2);\n\t\n\tvar _user2 = _interopRequireDefault(_user);\n\t\n\tvar _actions = __webpack_require__(83);\n\t\n\tvar _getters = __webpack_require__(48);\n\t\n\tvar _jquery = __webpack_require__(67);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _vueMaterialComponents = __webpack_require__(17);\n\t\n\tvar _vueMaterialComponents2 = _interopRequireDefault(_vueMaterialComponents);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar timesColor = {\n\t  white: 1,\n\t  black: 1\n\t};\n\tvar stylesBoard = {\n\t  board: ['light-wood-3d', 'blue', 'wood', 'marble'],\n\t  pieces: ['merida', 'staunton', 'pirouetti', 'cburnett']\n\t};\n\texports.default = {\n\t  template: __webpack_require__(209),\n\t  route: {\n\t    canActivate: function canActivate(transition) {\n\t      return _user2.default.user_acces('authenticate') && _lstorage2.default.get('board')._id ? true : transition.redirect('home');\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      chattext: '',\n\t      mensjGame: [],\n\t      user: _user2.default.getUser(),\n\t      ground: 0,\n\t      fen: 'none',\n\t      orientation: 'white',\n\t      history: [],\n\t      styleboard: true,\n\t      active: true,\n\t      state: '',\n\t      chess: new _chess2.default(),\n\t      stylesBoard: stylesBoard,\n\t      styles: _lstorage2.default.get('styleBoard', {\n\t        board: 1,\n\t        pieces: 0\n\t      }),\n\t      board: _lstorage2.default.get('board'),\n\t      dirServer: _lstorage2.default.get('serverDir')\n\t    };\n\t  },\n\t\n\t  mixins: [_vueMaterialComponents2.default],\n\t  props: {},\n\t  components: {\n\t    UserCard: _userCard2.default,\n\t    BoardHistory: _boardHistory2.default,\n\t    BodyMen: _bodyMen2.default\n\t  },\n\t  vuex: {\n\t    actions: {\n\t      boardGameMove: _actions.boardGameMove,\n\t      boardGameTurn: _actions.boardGameTurn,\n\t      boardGameCountDown: _actions.boardGameCountDown\n\t    },\n\t    getters: {\n\t      pgn: _getters.getGamePgn,\n\t      turn: _getters.getGameTurn,\n\t      time: _getters.getGameTimesUsers\n\t    }\n\t  },\n\t  events: {\n\t    move: function move(board) {\n\t      if (this.active) {\n\t        this.boardGameMove(board.pgn);\n\t      }\n\t      this.changeStateGame(board.pgn, board.move);\n\t      if (board.times) {\n\t        this.boardGameCountDown(board.times.black, 'black');\n\t        this.boardGameCountDown(board.times.white, 'white');\n\t      }\n\t    },\n\t    gameFinish: function gameFinish(dataResult) {\n\t      this.stateFinishGame(dataResult);\n\t    },\n\t    mensaje: function mensaje(data) {\n\t      this.recibeMensaje(data.men);\n\t    }\n\t  },\n\t  methods: {\n\t    recibeMensaje: function recibeMensaje(men) {\n\t      var idDiv = 'chatConvertGame';\n\t      var divScroll = document.getElementById(idDiv);\n\t      var atBottom = divScroll.scrollTop >= divScroll.scrollHeight - divScroll.clientHeight;\n\t      this.mensjGame.push(men);\n\t      if (atBottom) {\n\t        setTimeout(function () {\n\t          (0, _jquery2.default)('#' + idDiv).animate({\n\t            'scrollTop': (0, _jquery2.default)('#' + idDiv)[0].scrollHeight\n\t          }, 'slow');\n\t        }, 10);\n\t      }\n\t    },\n\t    loadUserConvert: function loadUserConvert(parms) {\n\t      var data = {\n\t        c: 'chat',\n\t        f: 'loadUserConvert',\n\t        data: parms\n\t      };\n\t      this.$socket.emit('event', data, function () {\n\t        var log = arguments.length <= 1 ? undefined : arguments[1];\n\t        this.mensjGame = log;\n\t        setTimeout(function () {\n\t          (0, _jquery2.default)('#chatConvertGame').animate({\n\t            'scrollTop': (0, _jquery2.default)('#chatConvertGame')[0].scrollHeight\n\t          }, 'slow');\n\t        }, 1000);\n\t      }.bind(this));\n\t    },\n\t    sendMensaje: function sendMensaje() {\n\t      var thisUser = _user2.default.getUser().username;\n\t      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1;\n\t      if (otherUser === 'PC' || this.chattext === '') {\n\t        return;\n\t      }\n\t      var men = {\n\t        body: this.chattext,\n\t        type: 'text',\n\t        public: false,\n\t        send: thisUser,\n\t        recibe: otherUser\n\t      };\n\t      var data = {\n\t        c: 'chat',\n\t        f: 'mensaje',\n\t        data: {\n\t          men: men\n\t        }\n\t      };\n\t      this.$socket.emit('event', data, function () {});\n\t      this.chattext = '';\n\t    },\n\t    countDown: function countDown() {\n\t      var seg = 0;\n\t      seg = this.time[this.turn] - 1;\n\t      if (seg <= 0) {\n\t        seg = 0;\n\t        clearInterval(timesColor[this.turn]);\n\t        if (this.active) {\n\t          var result = {\n\t            color: this.turn === 'black' ? 'white' : 'black',\n\t            motiv: 'timeout'\n\t          };\n\t          this.gameFinish(result);\n\t        }\n\t      }\n\t      this.boardGameCountDown(seg, this.turn);\n\t    },\n\t    countDownStart: function countDownStart() {\n\t      clearInterval(timesColor[this.turn]);\n\t      timesColor[this.turn] = setInterval(function () {\n\t        this.countDown();\n\t      }.bind(this), 1000);\n\t    },\n\t    chessToDests: function chessToDests(chess) {\n\t      var dests = {};\n\t      chess.SQUARES.forEach(function (s) {\n\t        var ms = chess.moves({ square: s, verbose: true });\n\t        if (ms.length) dests[s] = ms.map(function (m) {\n\t          return m.to;\n\t        });\n\t      });\n\t      return dests;\n\t    },\n\t    chessToColor: function chessToColor(chess) {\n\t      var t = chess.turn();\n\t      var turn = t === 'w' ? 'white' : 'black';\n\t      this.boardGameTurn(turn);\n\t      turn = _user2.default.getUser().username === this.board.u2 ? 'black' : 'white';\n\t      return turn;\n\t    },\n\t    onMove: function onMove(orig, dest) {\n\t      if (this.active) {\n\t        this.chess.move({\n\t          from: orig,\n\t          to: dest,\n\t          promotion: 'q'\n\t        });\n\t\n\t        var turn = this.chess.turn() === 'w' ? 'white' : 'black';\n\t        var data = {\n\t          c: 'board',\n\t          f: 'move',\n\t          data: {\n\t            event: 'move',\n\t            data: {\n\t              pgn: this.chess.pgn(),\n\t              idBoard: this.board._id,\n\t              turn: turn,\n\t              times: {},\n\t              move: {\n\t                from: orig,\n\t                to: dest\n\t              }\n\t            }\n\t          }\n\t        };\n\t        this.$socket.emit('event', data, function () {});\n\t      }\n\t    },\n\t    PcIngeniesMove: function PcIngeniesMove(move) {\n\t      var from = move & 0xFF;\n\t      var to = move >> 8 & 0xFF;\n\t      var sfrom = _garbochess2.default.FormatSquare(from);\n\t      var sto = _garbochess2.default.FormatSquare(to);\n\t      this.onMove(sfrom, sto);\n\t    },\n\t    pcMove: function pcMove(fen) {\n\t      _garbochess2.default.InitializeFromFen(fen);\n\t      _garbochess2.default.Search(this.PcIngeniesMove, 5, null);\n\t    },\n\t    isVsPc: function isVsPc(turn) {\n\t      if (turn === 'white' && this.board.u1 === 'PC' || turn === 'black' && this.board.u2 === 'PC') {\n\t        setTimeout(function () {\n\t          this.pcMove(this.chess.fen());\n\t        }.bind(this), 700);\n\t      }\n\t    },\n\t    isHumanVsPC: function isHumanVsPC() {\n\t      return this.board.u1 === 'PC' || this.board.u2 === 'PC';\n\t    },\n\t    changeStateGame: function changeStateGame(pgn) {\n\t      var move = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (move.from) {\n\t        this.chess.move({\n\t          from: move.from,\n\t          to: move.to,\n\t          promotion: 'q'\n\t        });\n\t        this.ground.move(move.from, move.to);\n\t      } else {\n\t          this.chess.load_pgn(pgn);\n\t        }\n\t      this.ground.set({\n\t        fen: this.chess.fen(),\n\t        turnColor: this.chessToColor(this.chess),\n\t        movable: {\n\t          color: this.chessToColor(this.chess),\n\t          dests: this.chessToDests(this.chess)\n\t        }\n\t      });\n\t      this.isVsPc(this.turn);\n\t    },\n\t    changeOrientation: function changeOrientation() {\n\t      this.orientation = this.orientation === 'white' ? 'black' : 'white';\n\t      this.ground.set({\n\t        orientation: this.orientation\n\t      });\n\t    },\n\t    changeStyle: function changeStyle(type) {\n\t      this.styles[type] = this.styles[type] + 1;\n\t      if (this.styles[type] > stylesBoard[type].length - 1) {\n\t        this.styles[type] = 0;\n\t      }\n\t      this.styleAdapter();\n\t      _lstorage2.default.set('styleBoard', this.styles);\n\t    },\n\t    styleAdapter: function styleAdapter() {\n\t      if (this.stylesBoard['board'][this.styles['board']] === 'light-wood-3d') {\n\t        document.getElementById('tablerochess').style.height = document.getElementById('tablerochess').clientWidth - document.getElementById('tablerochess').clientWidth * 6.25 / 100 + 'px';\n\t      } else {\n\t        document.getElementById('tablerochess').style.height = document.getElementById('tablerochess').clientWidth + 'px';\n\t      }\n\t    },\n\t    initGame: function initGame() {\n\t      this.boardGameMove('none');\n\t      var data = {\n\t        c: 'board',\n\t        f: 'getBoard',\n\t        data: _lstorage2.default.get('board')\n\t      };\n\t      this.$socket.emit('event', data, function () {\n\t        for (var _len = arguments.length, callbacks = Array(_len), _key = 0; _key < _len; _key++) {\n\t          callbacks[_key] = arguments[_key];\n\t        }\n\t\n\t        if (callbacks[0]) {\n\t          _lstorage2.default.del('board');\n\t          this.$route.router.go('/');\n\t          return;\n\t        }\n\t        var board = callbacks[1].board;\n\t        this.boardGameCountDown(callbacks[1].times.black, 'black');\n\t        this.boardGameCountDown(callbacks[1].times.white, 'white');\n\t        this.changeStateGame(board.pgn);\n\t        this.boardGameMove(board.pgn);\n\t        this.board = board;\n\t      }.bind(this));\n\t      var thisUser = _user2.default.getUser().username;\n\t      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1;\n\t      var parmsLoad = {\n\t        user: otherUser,\n\t        range: {\n\t          limit: 10,\n\t          skip: 0\n\t        }\n\t      };\n\t      this.loadUserConvert(parmsLoad);\n\t    },\n\t    gameState: function gameState() {\n\t      var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      if (state.motiv) {\n\t        if (state.motiv === 'checkmate') {\n\t          return 'checkmate ' + 'gana ' + state.color;\n\t        }\n\t        if (state.motiv === 'drawn_position') {\n\t          return 'drawn_position ' + 'gana' + state.color;\n\t        }\n\t        if (state.motiv === 'rendicion') {\n\t          return 'gana ' + state.color + ' por rendicion';\n\t        }\n\t        if (state.motiv === 'timeout') {\n\t          this.boardGameCountDown(0, state.color === 'white' ? 'black' : 'white');\n\t          return 'gana ' + state.color + ' por tiempo';\n\t        }\n\t      }\n\t\n\t      if (this.chess.in_checkmate()) {\n\t        var result = {\n\t          color: this.turn === 'white' ? 'black' : 'white',\n\t          motiv: 'checkmate'\n\t        };\n\t        this.gameFinish(result);\n\t        return;\n\t      }\n\t      if (this.chess.in_draw()) {\n\t        var _result = {\n\t          color: this.turn,\n\t          motiv: 'drawn_position'\n\t        };\n\t        this.gameFinish(_result);\n\t        return;\n\t      }\n\t      if (this.chess.in_check()) {\n\t        return this.turn + 'is in check';\n\t      }\n\t      return 'Juegan las ' + this.turn;\n\t    },\n\t    rendir: function rendir() {\n\t      var result = {\n\t        color: this.board.u1 === _user2.default.getUser().username ? 'black' : 'white',\n\t        motiv: 'rendicion'\n\t      };\n\t      this.gameFinish(result);\n\t    },\n\t    gameFinish: function gameFinish(result) {\n\t      if (!this.active) {\n\t        return;\n\t      }\n\t      var data = {\n\t        c: 'board',\n\t        f: 'gameFinish',\n\t        data: {\n\t          idBoard: this.board._id,\n\t          result: result\n\t        }\n\t      };\n\t      this.$socket.emit('event', data, function () {});\n\t    },\n\t    stateFinishGame: function stateFinishGame(state) {\n\t      this.active = false;\n\t      this.state = this.gameState(state.result);\n\t      _lstorage2.default.del('board');\n\t      this.ground.stop();\n\t      clearInterval(timesColor.black);\n\t      clearInterval(timesColor.white);\n\t    }\n\t  },\n\t  created: function created() {\n\t    _garbochess2.default.ResetGame();\n\t    setTimeout(function () {\n\t      this.orientation = _user2.default.getUser().username === this.board.u2 ? 'black' : 'white';\n\t      this.ground = (0, _chessground2.default)(document.getElementById('tablerochess'), {\n\t        viewOnly: false,\n\t        turnColor: 'white',\n\t        animation: {\n\t          duration: 300\n\t        },\n\t        movable: {\n\t          free: false,\n\t          premove: true,\n\t          dests: this.chessToDests(this.chess),\n\t          events: {\n\t            after: this.onMove\n\t          }\n\t        },\n\t        drawable: {\n\t          enabled: true\n\t        },\n\t        showDests: true,\n\t        orientation: this.orientation\n\t      });\n\t\n\t      this.styleAdapter();\n\t\n\t      this.initGame();\n\t      (0, _jquery2.default)('html, body').animate({\n\t        scrollTop: (0, _jquery2.default)('#tablerochess').offset().top\n\t      }, 500);\n\t    }.bind(this), 10);\n\t  },\n\t\n\t  watch: {\n\t    turn: function turn(newVal, oldVal) {\n\t      if (this.active) {\n\t        clearInterval(timesColor[oldVal]);\n\t        this.countDownStart();\n\t      }\n\t    },\n\t    pgn: function pgn(newVal, oldVal) {\n\t      this.state = this.gameState();\n\t      this.history = this.chess.history({ verbose: true });\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 91:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _getters = __webpack_require__(48);\n\t\n\texports.default = {\n\t  name: 'userCard',\n\t  props: {\n\t    color: {\n\t      type: String\n\t    },\n\t    username: {\n\t      type: String\n\t    }\n\t  },\n\t  vuex: {\n\t    getters: {\n\t      turn: _getters.getGameTurn,\n\t      time: _getters.getGameTimesUsers\n\t    }\n\t  },\n\t  methods: {\n\t    pad: function pad(n, lenght) {\n\t      return ('0' + n).slice(lenght);\n\t    }\n\t  },\n\t  filters: {\n\t    boardTime: function boardTime(s) {\n\t      var min = parseInt(s / 60);\n\t      var segs = s % 60;\n\t      return this.pad(min, -2) + ':' + this.pad(segs, -2);\n\t    }\n\t  },\n\t  watch: {},\n\t  created: function created() {}\n\t};\n\n/***/ },\n\n/***/ 200:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"col s12 m12 l12 card-panel\\\" v-bind:class=\\\"[turn === color ? 'userTurn' : '']\\\"> <div class=\\\"col s4 m4 l3\\\"> <h4 class=flat-text-header>{{ time[color] | boardTime }}</h4> </div> <div class=\\\"col s4 m4 l6\\\"> <p class=flat-text-header style=\\\"float: right\\\">{{ username }}</p> </div> <div class=\\\"col s4 m4 l3\\\"> <img alt=\\\"\\\" src=\" + __webpack_require__(45) + \" class=\\\"avatar avatar-50 photo avatar-default\\\" height=50 width=50> </div> </div>\";\n\n/***/ },\n\n/***/ 209:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"col s12\\\"> <div class=\\\"col s12 m12 l3\\\"> <p class=flat-text-header>Chat del juego</p> <div style=\\\"height: 65vh;overflow: auto\\\" id=chatConvertGame> <body-men :mens=mensjGame :dir-server=dirServer></body-men> </div> <form v-on:submit.prevent=sendMensaje()> <md-input name=text :value.sync=chattext class=\\\"col s9 m9 l10\\\"> Texto </md-input> <md-btn @mouseover=\\\"tooltip($event, 'Enviar Mensaje', 'top')\\\" class=\\\"btn waves-effect waves-light col s3 m3 l2 send-btn\\\" type=submit> S </md-btn> </form> </div> <div class=\\\"col s12 m12 l6\\\"> <div id=tablerochess style=\\\"width: 100%;height: 600px\\\" class=\\\"{{ stylesBoard['board'][styles['board']] }} chessground vuejs {{ stylesBoard['pieces'][styles['pieces']] }}\\\"></div> </div> <div class=\\\"col s12 m12 l3\\\"> <user-card :color=\\\"'white'\\\" :username=board.u1 v-if=\\\"this.orientation === 'black'\\\"></user-card> <user-card :color=\\\"'black'\\\" :username=board.u2 v-else></user-card> <h6 class=\\\"flat-text-header hello\\\" style=\\\"text-align: center\\\">{{ state }}</h6> <div class=\\\"col s12 m12 l12\\\"> <board-history :history=history :active=active :humanvspc=isHumanVsPC></board-history> </div> <div class=\\\"col s12 m12 l12\\\"> <md-btn @mouseover=\\\"tooltip($event, 'Pieces', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('pieces')\\\"> P </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Board', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('board')\\\"> B </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Rendirse', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=rendir()> Rendir </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Cambiar orientacion', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=changeOrientation> Invertir </md-btn> </div> <user-card :color=\\\"'black'\\\" :username=board.u2 v-if=\\\"this.orientation !== 'white'\\\"></user-card> <user-card :color=\\\"'white'\\\" :username=board.u1 v-else></user-card> </div> <style scoped>.menText p{\\n    text-align: justify;\\n    -moz-hyphens: auto;\\n    word-wrap: break-word;\\n}\\n\\n  .userTurn {\\n    background-color: #D8B980;\\n  }\\n  .send-btn{\\n    height: 60px;\\n  }\\n\\n  .chessground.tiny {\\n    width: 225px;\\n    height: 225px;\\n  }\\n  .chessground.small {\\n    width: 300px;\\n    height: 300px;\\n  }\\n  .chessground.normal {\\n    width: 512px;\\n    height: 512px;\\n  }\\n  .cg-board-wrap svg {\\n    opacity: 0.6;\\n    overflow: hidden;\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n    width: 100%;\\n    height: 100%;\\n    pointer-events: none;\\n    z-index: 2;\\n  }\\n  .cg-board-wrap svg * {\\n    transition: 0.35s;\\n  }</style> </div>\";\n\n/***/ },\n\n/***/ 216:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(90)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 217:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(91)\n\t__vue_template__ = __webpack_require__(200)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/js/0.02d5ba37bcb26d4beb14.js\n **/","export function getGamePgn (state) {\n  return state.boards.pgn\n}\nexport function getGameTurn (state) {\n  return state.boards.turn\n}\nexport function getGameTimesUsers (state) {\n  const times = {\n    white: state.boards.twhite,\n    black: state.boards.tblack\n  }\n  return times\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/getters.js\n **/","export const boardGameMove = makeAction('MOVE')\nexport const boardGameTurn = makeAction('TURN')\nexport const boardGameCountDown = makeAction('COUNTDOWN')\nfunction makeAction (type) {\n  return ({ dispatch }, ...args) => dispatch(type, ...args)\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/actions.js\n **/","<script>\nimport Chessground from 'chessground'\nimport MiChess from 'chess.js'\nimport Garbochess from 'garbochess'\nimport UserCard from './userCard'\nimport BoardHistory from './boardHistory'\nimport BodyMen from '../home/bodyMen'\nimport Store from '../../services/lstorage'\nimport UserService from '../../services/user'\nimport { boardGameMove, boardGameTurn, boardGameCountDown } from '../../vuex/actions'\nimport { getGamePgn, getGameTurn, getGameTimesUsers } from '../../vuex/getters'\nimport Jquery from 'jquery'\nimport tooltip from 'vue-material-components'\nvar timesColor = {\n  white: 1,\n  black: 1\n}\nvar stylesBoard = {\n  board: ['light-wood-3d', 'blue', 'wood', 'marble'],\n  pieces: ['merida', 'staunton', 'pirouetti', 'cburnett']\n}\nexport default {\n  template: require('./template.html'),\n  route: {\n    canActivate: function (transition) {\n      return UserService.user_acces('authenticate') && Store.get('board')._id ? true : transition.redirect('home')\n    }\n  },\n  data () {\n    return {\n      chattext: '',\n      mensjGame: [],\n      user: UserService.getUser(),\n      ground: 0,\n      fen: 'none',\n      orientation: 'white',\n      history: [],\n      styleboard: true,\n      active: true,\n      state: '',\n      chess: new MiChess(),\n      stylesBoard: stylesBoard,\n      styles: Store.get('styleBoard',\n        {\n          board: 1,\n          pieces: 0\n        }),\n      board: Store.get('board'),\n      dirServer: Store.get('serverDir')\n    }\n  },\n  mixins: [\n    tooltip\n  ],\n  props: {},\n  components: {\n    UserCard,\n    BoardHistory,\n    BodyMen\n  },\n  vuex: {\n    actions: {\n      boardGameMove,\n      boardGameTurn,\n      boardGameCountDown\n    },\n    getters: {\n      pgn: getGamePgn,\n      turn: getGameTurn,\n      time: getGameTimesUsers\n    }\n  },\n  events: {\n    move (board) {\n      if (this.active) {\n        this.boardGameMove(board.pgn)\n      }\n      this.changeStateGame(board.pgn, board.move)\n      if (board.times) {\n        // console.log(board.times)\n        this.boardGameCountDown(board.times.black, 'black')\n        this.boardGameCountDown(board.times.white, 'white')\n      }\n    },\n    gameFinish (dataResult) {\n      this.stateFinishGame(dataResult)\n    },\n    mensaje (data) {\n      this.recibeMensaje(data.men)\n    }\n  },\n  methods: {\n    recibeMensaje (men) {\n      var idDiv = 'chatConvertGame'\n      var divScroll = document.getElementById(idDiv)\n      var atBottom = divScroll.scrollTop >= divScroll.scrollHeight - divScroll.clientHeight\n      this.mensjGame.push(men)\n      if (atBottom) {\n        setTimeout(function () {\n          Jquery('#' + idDiv).animate({\n            'scrollTop': Jquery('#' + idDiv)[0].scrollHeight\n          }, 'slow')\n        }, 10)\n      }\n    },\n    loadUserConvert (parms) {\n      var data = {\n        c: 'chat',\n        f: 'loadUserConvert',\n        data: parms\n      }\n      this.$socket.emit('event', data, function (...callbacks) {\n        var log = callbacks[1]\n        this.mensjGame = log\n        setTimeout(function () {\n          Jquery('#chatConvertGame').animate({\n            'scrollTop': Jquery('#chatConvertGame')[0].scrollHeight\n          }, 'slow')\n        }, 1000)\n      }.bind(this))\n    },\n    sendMensaje () {\n      var thisUser = UserService.getUser().username\n      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1\n      if (otherUser === 'PC' || this.chattext === '') {\n        return\n      }\n      var men = {\n        body: this.chattext,\n        type: 'text',\n        public: false,\n        send: thisUser,\n        recibe: otherUser\n      }\n      var data = {\n        c: 'chat',\n        f: 'mensaje',\n        data: {\n          men: men\n        }\n      }\n      this.$socket.emit('event', data, function (...callbacks) {\n        // console.log(callbacks)\n      })\n      this.chattext = ''\n    },\n    countDown () {\n      var seg = 0\n      seg = this.time[this.turn] - 1\n      if (seg <= 0) {\n        seg = 0\n        clearInterval(timesColor[this.turn])\n        if (this.active) {\n          const result = {\n            color: this.turn === 'black' ? 'white' : 'black',\n            motiv: 'timeout'\n          }\n          this.gameFinish(result)\n        }\n      }\n      this.boardGameCountDown(seg, this.turn)\n    },\n    countDownStart () {\n      clearInterval(timesColor[this.turn])\n      timesColor[this.turn] = setInterval(function () {\n        this.countDown()\n      }.bind(this), 1000)\n    },\n    chessToDests (chess) {\n      var dests = {}\n      chess.SQUARES.forEach(function (s) {\n        var ms = chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(function (m) { return m.to })\n      })\n      return dests\n    },\n    chessToColor (chess) {\n      var t = chess.turn()\n      var turn = (t === 'w') ? 'white' : 'black'\n      this.boardGameTurn(turn)\n      turn = UserService.getUser().username === this.board.u2 ? 'black' : 'white'\n      return turn\n    },\n    onMove (orig, dest) {\n      // comprobar si el juego esta activo\n      if (this.active) {\n        this.chess.move({\n          from: orig,\n          to: dest,\n          promotion: 'q'\n        })\n        // comunicacion con servidor\n        var turn = (this.chess.turn() === 'w') ? 'white' : 'black'\n        var data = {\n          c: 'board',\n          f: 'move',\n          data: {\n            event: 'move',\n            data: {\n              pgn: this.chess.pgn(),\n              idBoard: this.board._id,\n              turn: turn,\n              times: {},\n              move: {\n                from: orig,\n                to: dest\n              }\n            }\n          }\n        }\n        this.$socket.emit('event', data, function (...callbacks) {\n          // console.log(callbacks)\n        })\n      }\n    },\n    PcIngeniesMove (move) {\n      var from = move & 0xFF\n      var to = (move >> 8) & 0xFF\n      var sfrom = Garbochess.FormatSquare(from)\n      var sto = Garbochess.FormatSquare(to)\n      this.onMove(sfrom, sto)\n    },\n    pcMove (fen) {\n      Garbochess.InitializeFromFen(fen)\n      Garbochess.Search(this.PcIngeniesMove, 5, null)\n    },\n    isVsPc (turn) {\n      if ((turn === 'white' && this.board.u1 === 'PC') || (turn === 'black' && this.board.u2 === 'PC')) {\n        setTimeout(function () {\n          this.pcMove(this.chess.fen())\n        }.bind(this), 700)\n      }\n    },\n    isHumanVsPC () {\n      return (this.board.u1 === 'PC') || (this.board.u2 === 'PC')\n    },\n    changeStateGame (pgn, move = {}) {\n      // show move board\n      if (move.from) {\n        this.chess.move({\n          from: move.from,\n          to: move.to,\n          promotion: 'q'\n        })\n        this.ground.move(move.from, move.to)\n        // this.ground.playPremove()\n      } else {\n        // load from pgn\n        this.chess.load_pgn(pgn)\n      }\n      this.ground.set({\n        fen: this.chess.fen(),\n        turnColor: this.chessToColor(this.chess),\n        movable: {\n          color: this.chessToColor(this.chess),\n          dests: this.chessToDests(this.chess)\n        }\n      })\n      this.isVsPc(this.turn)\n    },\n    changeOrientation () {\n      this.orientation = this.orientation === 'white' ? 'black' : 'white'\n      this.ground.set({\n        orientation: this.orientation\n      })\n    },\n    changeStyle (type) {\n      this.styles[type] = this.styles[type] + 1\n      if (this.styles[type] > stylesBoard[type].length - 1) {\n        this.styles[type] = 0\n      }\n      this.styleAdapter()\n      Store.set('styleBoard', this.styles)\n    },\n    styleAdapter () {\n      if (this.stylesBoard['board'][this.styles['board']] === 'light-wood-3d') {\n        document.getElementById('tablerochess').style.height = (document.getElementById('tablerochess').clientWidth - (document.getElementById('tablerochess').clientWidth * 6.25 / 100)) + 'px'\n      } else {\n        document.getElementById('tablerochess').style.height = document.getElementById('tablerochess').clientWidth + 'px'\n      }\n    },\n    initGame () {\n      // inicializando tiempos\n      this.boardGameMove('none')\n      var data = {\n        c: 'board',\n        f: 'getBoard',\n        data: Store.get('board')\n      }\n      this.$socket.emit('event', data, function (...callbacks) {\n        if (callbacks[0]) {\n          Store.del('board')\n          this.$route.router.go('/')\n          return\n        }\n        var board = callbacks[1].board\n        this.boardGameCountDown(callbacks[1].times.black, 'black')\n        this.boardGameCountDown(callbacks[1].times.white, 'white')\n        this.changeStateGame(board.pgn)\n        this.boardGameMove(board.pgn)\n        this.board = board\n      }.bind(this))\n      var thisUser = UserService.getUser().username\n      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1\n      var parmsLoad = {\n        user: otherUser,\n        range: {\n          limit: 10,\n          skip: 0\n        }\n      }\n      this.loadUserConvert(parmsLoad)\n    },\n    gameState (state = {}) {\n      if (state.motiv) {\n        if (state.motiv === 'checkmate') {\n          return 'checkmate ' + 'gana ' + state.color\n        }\n        if (state.motiv === 'drawn_position') {\n          return 'drawn_position ' + 'gana' + state.color\n        }\n        if (state.motiv === 'rendicion') {\n          return 'gana ' + state.color + ' por rendicion'\n        }\n        if (state.motiv === 'timeout') {\n          this.boardGameCountDown(0, state.color === 'white' ? 'black' : 'white')\n          return 'gana ' + state.color + ' por tiempo'\n        }\n      }\n      // checkmate?\n      if (this.chess.in_checkmate()) {\n        const result = {\n          color: this.turn === 'white' ? 'black' : 'white',\n          motiv: 'checkmate'\n        }\n        this.gameFinish(result)\n        return\n      }\n      if (this.chess.in_draw()) {\n        const result = {\n          color: this.turn,\n          motiv: 'drawn_position'\n        }\n        this.gameFinish(result)\n        return\n      }\n      if (this.chess.in_check()) {\n        return this.turn + 'is in check'\n      }\n      return 'Juegan las ' + this.turn\n    },\n    rendir () {\n      const result = {\n        color: this.board.u1 === UserService.getUser().username ? 'black' : 'white',\n        motiv: 'rendicion'\n      }\n      this.gameFinish(result)\n    },\n    gameFinish (result) {\n      if (!this.active) {\n        return\n      }\n      var data = {\n        c: 'board',\n        f: 'gameFinish',\n        data: {\n          idBoard: this.board._id,\n          result: result\n        }\n      }\n      this.$socket.emit('event', data, function (...callbacks) {\n        // console.log(callbacks)\n      })\n    },\n    stateFinishGame (state) {\n      this.active = false\n      this.state = this.gameState(state.result)\n      Store.del('board')\n      this.ground.stop()\n      clearInterval(timesColor.black)\n      clearInterval(timesColor.white)\n    }\n  },\n  created () {\n    Garbochess.ResetGame()\n    setTimeout(function () {\n      this.orientation = UserService.getUser().username === this.board.u2 ? 'black' : 'white'\n      this.ground = Chessground(document.getElementById('tablerochess'), {\n        viewOnly: false,\n        turnColor: 'white',\n        animation: {\n          duration: 300\n        },\n        movable: {\n          free: false,\n          premove: true,\n          dests: this.chessToDests(this.chess),\n          events: {\n            after: this.onMove\n          }\n        },\n        drawable: {\n          enabled: true\n        },\n        showDests: true,\n        orientation: this.orientation\n      })\n      // estableciendo razones de altura y ancho\n      this.styleAdapter()\n      // actualizando juego\n      this.initGame()\n      Jquery('html, body').animate({\n        scrollTop: Jquery('#tablerochess').offset().top\n      }, 500)\n    }.bind(this), 10)\n  },\n  watch: {\n    turn (newVal, oldVal) {\n      if (this.active) {\n        clearInterval(timesColor[oldVal])\n        this.countDownStart()\n      }\n    },\n    pgn (newVal, oldVal) {\n      this.state = this.gameState()\n      this.history = this.chess.history({ verbose: true })\n    }\n  }\n}\n</script>\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** index.vue?1f967095\n **/","<template>\n\n    <div class=\"col s12 m12 l12 card-panel\" v-bind:class=\"[turn === color ? 'userTurn' : '']\">\n      <div  class=\"col s4 m4 l3\">\n        <h4 class=\"flat-text-header\">{{ time[color] | boardTime }}</h4>\n      </div>\n      <div  class=\"col s4 m4 l6\">\n       <p class=\"flat-text-header\" style=\"float: right\">{{ username }}</p>     \n     </div>\n     <div  class=\"col s4 m4 l3\">\n      <img alt=\"\" src=\"../../assets/50x50defaultAvatar.png\" class=\"avatar avatar-50 photo avatar-default\" height=\"50\" width=\"50\">\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport { getGameTurn, getGameTimesUsers } from '../../vuex/getters'\nexport default {\n  name: 'userCard',\n  props: {\n    color: {\n      type: String\n    },\n    username: {\n      type: String\n    }\n  },\n  vuex: {\n    getters: {\n      turn: getGameTurn,\n      time: getGameTimesUsers\n    }\n  },\n  methods: {\n    pad (n, lenght) {\n      return ('0' + n).slice(lenght)\n    }\n  },\n  filters: {\n    boardTime (s) {\n      var min = parseInt(s / 60)\n      var segs = s % 60\n      return this.pad(min, -2) + ':' + this.pad(segs, -2)\n    }\n  },\n  watch: {},\n  created () {}\n}\n</script>\n\n\n/** WEBPACK FOOTER **\n ** userCard.vue?ad29bf02\n **/","module.exports = \"<div class=\\\"col s12 m12 l12 card-panel\\\" v-bind:class=\\\"[turn === color ? 'userTurn' : '']\\\"> <div class=\\\"col s4 m4 l3\\\"> <h4 class=flat-text-header>{{ time[color] | boardTime }}</h4> </div> <div class=\\\"col s4 m4 l6\\\"> <p class=flat-text-header style=\\\"float: right\\\">{{ username }}</p> </div> <div class=\\\"col s4 m4 l3\\\"> <img alt=\\\"\\\" src=\" + require(\"../../assets/50x50defaultAvatar.png\") + \" class=\\\"avatar avatar-50 photo avatar-default\\\" height=50 width=50> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/game/userCard.vue\n ** module id = 200\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"col s12\\\"> <div class=\\\"col s12 m12 l3\\\"> <p class=flat-text-header>Chat del juego</p> <div style=\\\"height: 65vh;overflow: auto\\\" id=chatConvertGame> <body-men :mens=mensjGame :dir-server=dirServer></body-men> </div> <form v-on:submit.prevent=sendMensaje()> <md-input name=text :value.sync=chattext class=\\\"col s9 m9 l10\\\"> Texto </md-input> <md-btn @mouseover=\\\"tooltip($event, 'Enviar Mensaje', 'top')\\\" class=\\\"btn waves-effect waves-light col s3 m3 l2 send-btn\\\" type=submit> S </md-btn> </form> </div> <div class=\\\"col s12 m12 l6\\\"> <div id=tablerochess style=\\\"width: 100%;height: 600px\\\" class=\\\"{{ stylesBoard['board'][styles['board']] }} chessground vuejs {{ stylesBoard['pieces'][styles['pieces']] }}\\\"></div> </div> <div class=\\\"col s12 m12 l3\\\"> <user-card :color=\\\"'white'\\\" :username=board.u1 v-if=\\\"this.orientation === 'black'\\\"></user-card> <user-card :color=\\\"'black'\\\" :username=board.u2 v-else></user-card> <h6 class=\\\"flat-text-header hello\\\" style=\\\"text-align: center\\\">{{ state }}</h6> <div class=\\\"col s12 m12 l12\\\"> <board-history :history=history :active=active :humanvspc=isHumanVsPC></board-history> </div> <div class=\\\"col s12 m12 l12\\\"> <md-btn @mouseover=\\\"tooltip($event, 'Pieces', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('pieces')\\\"> P </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Board', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('board')\\\"> B </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Rendirse', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=rendir()> Rendir </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Cambiar orientacion', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=changeOrientation> Invertir </md-btn> </div> <user-card :color=\\\"'black'\\\" :username=board.u2 v-if=\\\"this.orientation !== 'white'\\\"></user-card> <user-card :color=\\\"'white'\\\" :username=board.u1 v-else></user-card> </div> <style scoped>.menText p{\\n    text-align: justify;\\n    -moz-hyphens: auto;\\n    word-wrap: break-word;\\n}\\n\\n  .userTurn {\\n    background-color: #D8B980;\\n  }\\n  .send-btn{\\n    height: 60px;\\n  }\\n\\n  .chessground.tiny {\\n    width: 225px;\\n    height: 225px;\\n  }\\n  .chessground.small {\\n    width: 300px;\\n    height: 300px;\\n  }\\n  .chessground.normal {\\n    width: 512px;\\n    height: 512px;\\n  }\\n  .cg-board-wrap svg {\\n    opacity: 0.6;\\n    overflow: hidden;\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n    width: 100%;\\n    height: 100%;\\n    pointer-events: none;\\n    z-index: 2;\\n  }\\n  .cg-board-wrap svg * {\\n    transition: 0.35s;\\n  }</style> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/game/template.html\n ** module id = 209\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/game/index.vue\n ** module id = 216\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./userCard.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./userCard.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/game/userCard.vue\n ** module id = 217\n ** module chunks = 0\n **/"],"sourceRoot":""}